% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/link_positions.r
\name{link_positions}
\alias{link_positions}
\title{Calculate link position vectors}
\usage{
link_positions(M, six_node = FALSE, normalisation = "none")
}
\arguments{
\item{M}{A numeric matrix representing interactions between two groups of nodes. Each row corresponds to a node in one level
and each column corresponds to a node in the other level. Elements of M are positive numbers if nodes do interact, and 0
otherwise. Formally, M is an incidence matrix. When nodes i and j interact, m_ij > 0; if they do not interact, m_ij = 0.
If interactions are weighted (matrix elements other than zero and one), the function will automatically convert the matrix to a binary
matrix.}

\item{six_node}{Logical; should six node motifs be counted?}

\item{normalisation}{Which normalisation should be used: "none", "sum", "size class" or "position"?  Defaults to "none".}
}
\value{
Returns a data frame with one column for each link position: 29 columns if \code{six_node} is FALSE, and 106 columns if \code{six_node} is TRUE.
Columns names are given as "px" where x is the ID of the position as described in Simmons et al. (2017) (and originally in Appendix 1 of Baker et al. (2015))
Each row corresponds to one link in the network. Row names are gives as "x -- y", where x is the species in the first level and y the species in the second level.
If a matrix is provided without row or column names, default names will be assigned: the first row will be called called 'r1', the second row will be called 'r2' and so on. Similarly, the first column will be called 'c1', the second column will be called 'c2' and so on.

By default, the elements of this data frame will be the raw link position counts. If \code{normalisation} is set to "sum", "size class" or "position", the elements will be
normalised position counts as described above.
}
\description{
Counts the frequency with which links occur in different positions within motifs.
}
\details{
Counts the number of times each link in a network occurs in each of the 29 (if \code{six_node} = FALSE) or 106 (if \code{six_node} = TRUE) unique link positions within motifs (to quantify a link's structural role).
Links between nodes with more interactions will tend to appear in more positions. Normalisation helps control for this effect.
"none" performs no normalisation and will return the raw position counts.
"sum" divides link position counts for each link by the total number of times that link appears in any position.
"size class" divides link position counts for each link by the total number of times that link appears in any position within the same motif size class.
"position" divides link position counts for each link by the total number of times any link occurs in that link position,
i.e. it gives a measure of how often that link occurs in this position compared to the other links in the network.
}
\examples{
set.seed(123)
row <- 15
col <- 15
m <- matrix(sample(0:1, row*col, replace=TRUE), row, col)
rownames(m) <- paste0("r", 1:nrow(m)) # give the matrix row names
colnames(m) <- paste0("c", 1:ncol(m)) # give the matrix column names
link_positions(M = m, six_node = TRUE, normalisation = "none")
}
\references{
Simmons, B. I., Sweering, M. J. M., Dicks, L. V., Sutherland, W. J. and Di Clemente, R. bmotif: a package for counting motifs in bipartite networks. bioRxiv. doi: 10.1101/302356
}
